# Adapted from: https://gist.github.com/NickNaso/0d478f1481686d5bcc868cac06620a60

name: Build

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
    strategy:
      fail-fast: false
      matrix:
        config: 
        # - {
        #     name: "Windows_Latest_MinGW",
        #     os: windows-latest,
        #   }
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
          }
        - {
            name: "macOS_Latest_Clang",
            os: macos-latest,
          }

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          
      # - name: Install dependencies on Windows
      #   if: startsWith(matrix.config.name, 'Windows_Latest_MinGW')
      #   run: |
      #     Remove-Item -Path "C:\Strawberry\perl" -Recurse -Force
      #     choco install --allow-empty-checksums pkgconfiglite glfw3

      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu_Latest_GCC')
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libglfw3-dev libassimp-dev

      - name: Install dependencies on macOS
        if: startsWith(matrix.config.name, 'macOS_Latest_Clang')
        run: |
          brew install glfw assimp

      - name: Build
        shell: bash
        run: make -j1
        working-directory: HairStrandsRendering

      - name: Pack
        shell: bash
        run: |
          zip -r HairStrandsRendering-${{ matrix.config.os }}.zip HairStrandsRendering/HairStrandsRendering HairStrandsRendering/imgui.ini HairStrandsRendering/shaders

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ./HairStrandsRendering-${{ matrix.config.os }}.zip
          name: HairStrandsRendering-${{ matrix.config.os }}.zip

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./HairStrandsRendering-${{ matrix.config.os }}.zip
          asset_name: HairStrandsRendering-${{ matrix.config.os }}.zip
          asset_content_type: application/zip
